#!/usr/bin/python
#------------------------------------------------------------------------------
'''

Convert SVG Curve Paths to SDFX Bezier Curve Code.

'''
#------------------------------------------------------------------------------

import ply.lex as lex
import ply.yacc as yacc

#------------------------------------------------------------------------------
# tokens

tokens = (
  'A','C','H','L','M','Q','S','T','V','Z',
  'a','c','h','l','m','q','s','t','v','z',
)

t_A = r'A' # elliptical-arc
t_a = r'a'

t_C = r'C' # curveto (cubic bezier)
t_c = r'c'

t_H = r'H' # horizontal-lineto
t_h = r'h'

t_L = r'L' # lineto
t_l = r'l'

t_M = r'M' # moveto
t_m = r'm'

t_Q = r'Q' # quadratic-bezier-curveto
t_q = r'q'

t_S = r'S' # smooth-curveto (cubic bezier)
t_s = r's'

t_T = r'T' # smooth-quadratic-bezier-curveto
t_t = r't'

t_V = r'V' # vertical-lineto
t_v = r'v'

t_Z = r'Z' # closepath
t_z = r'z'

#------------------------------------------------------------------------------
'''

See: https://www.w3.org/TR/SVG/paths.html#PathData

svg-path:
    wsp* moveto-drawto-command-groups? wsp*
moveto-drawto-command-groups:
    moveto-drawto-command-group
    | moveto-drawto-command-group wsp* moveto-drawto-command-groups
moveto-drawto-command-group:
    moveto wsp* drawto-commands?
drawto-commands:
    drawto-command
    | drawto-command wsp* drawto-commands
drawto-command:
    closepath
    | lineto
    | horizontal-lineto
    | vertical-lineto
    | curveto
    | smooth-curveto
    | quadratic-bezier-curveto
    | smooth-quadratic-bezier-curveto
    | elliptical-arc
moveto:
    ( "M" | "m" ) wsp* moveto-argument-sequence
moveto-argument-sequence:
    coordinate-pair
    | coordinate-pair comma-wsp? lineto-argument-sequence
closepath:
    ("Z" | "z")
lineto:
    ( "L" | "l" ) wsp* lineto-argument-sequence
lineto-argument-sequence:
    coordinate-pair
    | coordinate-pair comma-wsp? lineto-argument-sequence
horizontal-lineto:
    ( "H" | "h" ) wsp* horizontal-lineto-argument-sequence
horizontal-lineto-argument-sequence:
    coordinate
    | coordinate comma-wsp? horizontal-lineto-argument-sequence
vertical-lineto:
    ( "V" | "v" ) wsp* vertical-lineto-argument-sequence
vertical-lineto-argument-sequence:
    coordinate
    | coordinate comma-wsp? vertical-lineto-argument-sequence
curveto:
    ( "C" | "c" ) wsp* curveto-argument-sequence
curveto-argument-sequence:
    curveto-argument
    | curveto-argument comma-wsp? curveto-argument-sequence
curveto-argument:
    coordinate-pair comma-wsp? coordinate-pair comma-wsp? coordinate-pair
smooth-curveto:
    ( "S" | "s" ) wsp* smooth-curveto-argument-sequence
smooth-curveto-argument-sequence:
    smooth-curveto-argument
    | smooth-curveto-argument comma-wsp? smooth-curveto-argument-sequence
smooth-curveto-argument:
    coordinate-pair comma-wsp? coordinate-pair
quadratic-bezier-curveto:
    ( "Q" | "q" ) wsp* quadratic-bezier-curveto-argument-sequence
quadratic-bezier-curveto-argument-sequence:
    quadratic-bezier-curveto-argument
    | quadratic-bezier-curveto-argument comma-wsp? 
        quadratic-bezier-curveto-argument-sequence
quadratic-bezier-curveto-argument:
    coordinate-pair comma-wsp? coordinate-pair
smooth-quadratic-bezier-curveto:
    ( "T" | "t" ) wsp* smooth-quadratic-bezier-curveto-argument-sequence
smooth-quadratic-bezier-curveto-argument-sequence:
    coordinate-pair
    | coordinate-pair comma-wsp? smooth-quadratic-bezier-curveto-argument-sequence
elliptical-arc:
    ( "A" | "a" ) wsp* elliptical-arc-argument-sequence
elliptical-arc-argument-sequence:
    elliptical-arc-argument
    | elliptical-arc-argument comma-wsp? elliptical-arc-argument-sequence
elliptical-arc-argument:
    nonnegative-number comma-wsp? nonnegative-number comma-wsp? 
        number comma-wsp flag comma-wsp? flag comma-wsp? coordinate-pair
coordinate-pair:
    coordinate comma-wsp? coordinate
coordinate:
    number
nonnegative-number:
    integer-constant
    | floating-point-constant
number:
    sign? integer-constant
    | sign? floating-point-constant
flag:
    "0" | "1"
comma-wsp:
    (wsp+ comma? wsp*) | (comma wsp*)
comma:
    ","
integer-constant:
    digit-sequence
floating-point-constant:
    fractional-constant exponent?
    | digit-sequence exponent
fractional-constant:
    digit-sequence? "." digit-sequence
    | digit-sequence "."
exponent:
    ( "e" | "E" ) sign? digit-sequence
sign:
    "+" | "-"
digit-sequence:
    digit
    | digit digit-sequence
digit:
    "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
wsp:
    (#x20 | #x9 | #xD | #xA)

'''
#------------------------------------------------------------------------------

test_path = [
  "M10 10 H 90 V 90 H 10 L 10 10"
  "M139,356 C100,100 372,91 398,414 Z",
  "M10 10 C 20 20, 40 20, 50 10",
  "M70 10 C 70 20, 120 20, 120 10",
  "M130 10 C 120 20, 180 20, 170 10",
  "M10 60 C 20 80, 40 80, 50 60",
  "M70 60 C 70 80, 110 80, 110 60",
  "M130 60 C 120 80, 180 80, 170 60",
  "M10 110 C 20 140, 40 140, 50 110",
  "M70 110 C 70 140, 110 140, 110 110",
  "M130 110 C 120 140, 180 140, 170 110",
]

#------------------------------------------------------------------------------

def main():
  for t in test_path:
    print(t)

main()

#------------------------------------------------------------------------------
